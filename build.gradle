version = '0.0.1-SNAPSHOT'

buildscript {
    ext {
        kotlin_version = '1.2.50'
        kotlinx_coroutines = '0.22.5'
        spring_boot_version = '2.0.2.RELEASE'
        jackson_version = '2.9.5'
        java_jwt_version = '3.3.0'
        junit_jupiter_version = '5.2.0'
        jetbrains_annotations_version = '15.0'
        commons_io_version = '2.6'
        mariadb_jdbc_version = '2.2.4'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

subprojects {
    ext['jackson.version'] = jackson_version

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'kotlin-noarg'
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"

        testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
        // To avoid compiler warnings about @API annotations in JUnit code
        testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
            allWarningsAsErrors = true
            freeCompilerArgs = ['-Xenable-jvm-default']
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
            allWarningsAsErrors = true
            freeCompilerArgs = ['-Xenable-jvm-default']
        }
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}
